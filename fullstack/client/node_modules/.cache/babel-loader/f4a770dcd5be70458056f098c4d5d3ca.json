{"ast":null,"code":"var _jsxFileName = \"/Users/Zack/Documents/INFO 442/Info-442-Global-Souvenir-Guidebook/fullstack/client/src/components/list/list.js\";\nimport React from 'react';\nimport Item from '../item/item.js'; // import ReactDOM from 'react-dom';\n// import * as serviceWorker from './serviceWorker';\n\nclass List extends React.Component {\n  // stores.data.map(item => <Item key = {item.StoreID} storename = {item.StoreName}/>)\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      isLoaded: false,\n      refresh: false,\n      paginations: []\n    };\n  }\n\n  componentDidMount() {\n    // console.log(this.context)\n    fetch(\"http://localhost:3001/stores?page=0\").then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json.data,\n        paginations: json.paginations\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const _this$props = this.props,\n          filter = _this$props.filter,\n          refresh = _this$props.refresh,\n          search = _this$props.search;\n    console.log(refresh);\n    console.log(prevProps.refresh);\n\n    if (prevProps.refresh !== refresh) {\n      var basic_query = \"http://localhost:3001/stores?page=0\";\n\n      for (var i in Object.keys(filter)) {\n        if (filter[Object.keys(filter)[i]] !== '') basic_query += \"&\" + Object.keys(filter)[i] + \"=\" + filter[Object.keys(filter)[i]];\n      }\n\n      if (search !== '') basic_query += \"&search_text=\" + search;\n      console.log(basic_query);\n      fetch(basic_query).then(res => res.json()).then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json.data,\n          paginations: json.paginations\n        });\n      });\n    }\n  }\n\n  render() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items,\n        paginations = _this$state.paginations; // console.log(paginations)\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Loading...\");\n    } else if (items.length === 0) return React.createElement(\"div\", {\n      className: \"col-sm-9 col-md-6 col-lg-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"No Results!\")));else if (typeof paginations.next != 'undefined') {\n      return React.createElement(\"div\", {\n        className: \"col-sm-9 col-md-6 col-lg-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, items.map(item => React.createElement(Item, {\n        key: item.StoreID,\n        id: item.StoreID,\n        address: item.Address,\n        storename: item.StoreName,\n        website: item.Website,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"pager\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"previous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Previous\")), React.createElement(\"li\", {\n        className: \"next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Next\"))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"col-sm-9 col-md-6 col-lg-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, items.map(item => React.createElement(Item, {\n        key: item.StoreID,\n        id: item.StoreID,\n        address: item.Address,\n        storename: item.StoreName,\n        website: item.Website,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default List; // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["/Users/Zack/Documents/INFO 442/Info-442-Global-Souvenir-Guidebook/fullstack/client/src/components/list/list.js"],"names":["React","Item","List","Component","constructor","state","items","isLoaded","refresh","paginations","componentDidMount","fetch","then","res","json","setState","data","componentDidUpdate","prevProps","props","filter","search","console","log","basic_query","i","Object","keys","render","length","next","map","item","StoreID","Address","StoreName","Website"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Item from '../item/item.js'\n// import ReactDOM from 'react-dom';\n// import * as serviceWorker from './serviceWorker';\n\nclass List extends React.Component {\n    // stores.data.map(item => <Item key = {item.StoreID} storename = {item.StoreName}/>)\n    constructor () {\n        super()\n        this.state = {\n            items: [],\n            isLoaded: false,\n            refresh: false,\n            paginations: []\n        }\n    }\n    componentDidMount() {\n        // console.log(this.context)\n        fetch(\"http://localhost:3001/stores?page=0\")\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n                isLoaded: true,\n                items: json.data,\n                paginations: json.paginations\n            })\n        })\n    }\n    componentDidUpdate(prevProps) {\n        const { filter, refresh, search} = this.props;\n        console.log(refresh)\n        console.log(prevProps.refresh)\n        if (prevProps.refresh !== refresh) {\n            var basic_query = \"http://localhost:3001/stores?page=0\"\n            for (var i in Object.keys(filter)) {\n                if (filter[Object.keys(filter)[i]]!=='')\n                    basic_query+=\"&\"+Object.keys(filter)[i]+\"=\"+filter[Object.keys(filter)[i]]\n            }\n        \n            \n            if (search!=='')\n                basic_query+=\"&search_text=\"+search\n\n            console.log(basic_query)\n                fetch(basic_query)\n                .then(res => res.json())\n                .then(json => {\n                    this.setState({\n                        isLoaded: true,\n                        items: json.data,\n                        paginations: json.paginations\n                    })\n            })   \n        } \n            \n        \n      }\n\n    render() {\n            var { isLoaded, items, paginations } = this.state\n            // console.log(paginations)\n            if (!isLoaded) {\n                return <div>Loading...</div>\n            }\n            else if (items.length === 0)\n                return (\n                <div className={\"col-sm-9 col-md-6 col-lg-8\"}>\n                <div className=\"container-fluid\">\n                    <p>No Results!</p>\n                </div>\n                </div>\n                )\n            else if (typeof paginations.next != 'undefined'){\n                return (\n                    <div className={\"col-sm-9 col-md-6 col-lg-8\"}>\n                        <div className=\"container-fluid\">\n                            {items.map(item => \n                            <Item key = {item.StoreID}\n                                  id = {item.StoreID}\n                                  address = {item.Address}\n                                  storename = {item.StoreName} \n                                  website = {item.Website}\n                                  />)}\n                        </div>\n                        <br />\n                        \n                        <ul className=\"pager\">\n                                <li className=\"previous\"><a href=\"#\">Previous</a></li>\n                                <li className=\"next\"><a href=\"#\">Next</a></li>\n                        </ul>\n                    </div>\n                )\n            }\n            else {\n                return (\n                    <div className={\"col-sm-9 col-md-6 col-lg-8\"}>\n                        <div className=\"container-fluid\">\n                            {items.map(item => \n                            <Item key = {item.StoreID}\n                                  id = {item.StoreID}\n                                  address = {item.Address}\n                                  storename = {item.StoreName} \n                                  website = {item.Website}\n                                  />)}\n                        </div>\n                        <br />\n                    </div>\n                )\n            }\n    }\n}\n\n\nexport default List;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}