{"ast":null,"code":"var _jsxFileName = \"/Users/Zack/Documents/INFO 442/Info-442-Global-Souvenir-Guidebook/fullstack/client/src/components/view1/view1.js\";\nimport React from 'react';\nimport \"./view1.css\";\nimport Search from '../search/search.js';\nimport Filter from '../filter/filter.js';\nimport List from '../list/list.js'; // import ReactDOM from 'react-dom';\n// import * as serviceWorker from './serviceWorker';\n\nclass View1 extends React.Component {\n  constructor() {\n    super();\n    this.changeFilter = this.changeFilter.bind(this);\n    this.changeSearch = this.changeSearch.bind(this);\n    this.state = {\n      filter: {\n        \"product_type\": \"\",\n        \"theme\": \"\",\n        \"neighborhood\": \"\",\n        \"for_whom\": \"\"\n      },\n      searchtext: \"\",\n      refresh: false\n    }; // this.filter = \n    // this.searchtext = \"\"\n    // this.refresh = false\n  }\n\n  changeFilter(filtertype, filtername, checked) {\n    var filt = this.state.filter;\n\n    if (checked) {\n      if (filt[filtertype] !== \"\") filt[filtertype] += \",\" + filtername;else filt[filtertype] += filtername;\n      this.setState(filt);\n      this.setState({\n        refresh: !this.state.refresh\n      });\n    } else {\n      var one = filt[filtertype].search(\",\" + filtername);\n      var three = filt[filtertype].search(filtername + \",\");\n      var two = filt[filtertype].search(filtername);\n      console.log(two);\n      if (one !== -1) filt[filtertype] = filt[filtertype].replace(\",\" + filtername, \"\");else if (three !== -1) filt[filtertype] = filt[filtertype].replace(filtername + \",\", \"\");else if (two !== -1) filt[filtertype] = filt[filtertype].replace(filtername, \"\");\n      this.setState(filt);\n      this.setState({\n        refresh: !this.state.refresh\n      });\n    } // this.state.filter[filtertype] = filtername\n    // this.state.refresh = !this.state.refresh\n\n\n    console.log(checked);\n    console.log(this.state.filter);\n  }\n\n  changeSearch(text) {\n    this.setState({\n      searchtext: text,\n      refresh: !this.state.refresh\n    }); // this.state.searchtext = text;\n    // this.state.refresh = !this.state.refresh\n\n    console.log(this.state.searchtext);\n  }\n\n  render() {\n    return (// <FilterContext.Provider>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Search, {\n        changeSearch: this.changeSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Filter, {\n        changeFilter: this.changeFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(List, {\n        refresh: this.state.refresh,\n        filter: this.state.filter,\n        search: this.state.searchtext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })))) // </FilterContext.Provider>\n\n    );\n  }\n\n}\n\nexport default View1; // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["/Users/Zack/Documents/INFO 442/Info-442-Global-Souvenir-Guidebook/fullstack/client/src/components/view1/view1.js"],"names":["React","Search","Filter","List","View1","Component","constructor","changeFilter","bind","changeSearch","state","filter","searchtext","refresh","filtertype","filtername","checked","filt","setState","one","search","three","two","console","log","replace","text","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,iBAAjB,C,CACA;AACA;;AACA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,GAAI;AACb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AACR,wBAAgB,EADR;AAER,iBAAS,EAFD;AAGR,wBAAgB,EAHR;AAIR,oBAAY;AAJJ,OADG;AAOXC,MAAAA,UAAU,EAAE,EAPD;AAQXC,MAAAA,OAAO,EAAE;AARE,KAAb,CAJa,CAcb;AACA;AACA;AACD;;AACDN,EAAAA,YAAY,CAACO,UAAD,EAAaC,UAAb,EAAyBC,OAAzB,EAAkC;AAC5C,QAAIC,IAAI,GAAG,KAAKP,KAAL,CAAWC,MAAtB;;AACA,QAAIK,OAAJ,EAAa;AACX,UAAGC,IAAI,CAACH,UAAD,CAAJ,KAAmB,EAAtB,EACEG,IAAI,CAACH,UAAD,CAAJ,IAAoB,MAAMC,UAA1B,CADF,KAGEE,IAAI,CAACH,UAAD,CAAJ,IAAoBC,UAApB;AACF,WAAKG,QAAL,CAAcD,IAAd;AACA,WAAKC,QAAL,CAAc;AACZL,QAAAA,OAAO,EAAE,CAAC,KAAKH,KAAL,CAAWG;AADT,OAAd;AAGD,KATD,MAUK;AACH,UAAIM,GAAG,GAAGF,IAAI,CAACH,UAAD,CAAJ,CAAiBM,MAAjB,CAAwB,MAAIL,UAA5B,CAAV;AACA,UAAIM,KAAK,GAAGJ,IAAI,CAACH,UAAD,CAAJ,CAAiBM,MAAjB,CAAwBL,UAAU,GAAC,GAAnC,CAAZ;AACA,UAAIO,GAAG,GAAGL,IAAI,CAACH,UAAD,CAAJ,CAAiBM,MAAjB,CAAwBL,UAAxB,CAAV;AAEAQ,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAIH,GAAG,KAAK,CAAC,CAAb,EACEF,IAAI,CAACH,UAAD,CAAJ,GAAiBG,IAAI,CAACH,UAAD,CAAJ,CAAiBW,OAAjB,CAAyB,MAAIV,UAA7B,EAAyC,EAAzC,CAAjB,CADF,KAEK,IAAIM,KAAK,KAAK,CAAC,CAAf,EACHJ,IAAI,CAACH,UAAD,CAAJ,GAAiBG,IAAI,CAACH,UAAD,CAAJ,CAAiBW,OAAjB,CAAyBV,UAAU,GAAC,GAApC,EAAyC,EAAzC,CAAjB,CADG,KAEA,IAAIO,GAAG,KAAK,CAAC,CAAb,EACHL,IAAI,CAACH,UAAD,CAAJ,GAAmBG,IAAI,CAACH,UAAD,CAAJ,CAAiBW,OAAjB,CAAyBV,UAAzB,EAAqC,EAArC,CAAnB;AACF,WAAKG,QAAL,CAAcD,IAAd;AACA,WAAKC,QAAL,CAAc;AACZL,QAAAA,OAAO,EAAE,CAAC,KAAKH,KAAL,CAAWG;AADT,OAAd;AAGD,KA5B2C,CA6B5C;AACA;;;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,MAAvB;AACD;;AAEDF,EAAAA,YAAY,CAACiB,IAAD,EAAO;AACjB,SAAKR,QAAL,CAAc;AACZN,MAAAA,UAAU,EAAEc,IADA;AAEZb,MAAAA,OAAO,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAFT,KAAd,EADiB,CAKjB;AACA;;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWE,UAAvB;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACT,WACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,YAAY,EAAI,KAAKlB,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,YAAY,EAAI,KAAKF,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAI,KAAKG,KAAL,CAAWG,OAA5B;AAAqC,QAAA,MAAM,EAAI,KAAKH,KAAL,CAAWC,MAA1D;AAAkE,QAAA,MAAM,EAAI,KAAKD,KAAL,CAAWE,UAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAJF,CAFF,CAFF,CAgBE;;AAhBF;AAkBC;;AAnF+B;;AAuFpC,eAAeR,KAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport \"./view1.css\"\nimport Search from '../search/search.js'\nimport Filter from '../filter/filter.js'\nimport List from '../list/list.js'\n// import ReactDOM from 'react-dom';\n// import * as serviceWorker from './serviceWorker';\nclass View1 extends React.Component {\n    constructor () {\n      super()\n      this.changeFilter = this.changeFilter.bind(this)\n      this.changeSearch = this.changeSearch.bind(this)\n      this.state = {\n        filter: {\n        \"product_type\": \"\",\n        \"theme\": \"\",\n        \"neighborhood\": \"\",\n        \"for_whom\": \"\"\n        },\n        searchtext: \"\",\n        refresh: false\n      }\n      // this.filter = \n      // this.searchtext = \"\"\n      // this.refresh = false\n    }\n    changeFilter(filtertype, filtername, checked) {\n      var filt = this.state.filter\n      if (checked) {\n        if(filt[filtertype]!==\"\")\n          filt[filtertype] += \",\" + filtername\n        else\n          filt[filtertype] += filtername\n        this.setState(filt)\n        this.setState({\n          refresh: !this.state.refresh\n        })\n      }\n      else {\n        var one = filt[filtertype].search(\",\"+filtername)\n        var three = filt[filtertype].search(filtername+\",\")\n        var two = filt[filtertype].search(filtername)\n        \n        console.log(two)\n        if (one !== -1)\n          filt[filtertype]=filt[filtertype].replace(\",\"+filtername, \"\")\n        else if (three !== -1)\n          filt[filtertype]=filt[filtertype].replace(filtername+\",\", \"\")\n        else if (two !== -1)\n          filt[filtertype] = filt[filtertype].replace(filtername, \"\")\n        this.setState(filt)\n        this.setState({\n          refresh: !this.state.refresh\n        })\n      }\n      // this.state.filter[filtertype] = filtername\n      // this.state.refresh = !this.state.refresh\n      console.log(checked)\n      console.log(this.state.filter)\n    }\n\n    changeSearch(text) {\n      this.setState({\n        searchtext: text,\n        refresh: !this.state.refresh\n      })\n      // this.state.searchtext = text;\n      // this.state.refresh = !this.state.refresh\n      console.log(this.state.searchtext)\n    }\n\n    render() {\n    return (\n      // <FilterContext.Provider>\n      <div>\n        <Search changeSearch = {this.changeSearch}/>\n        <div className={\"container-fluid\"}>\n          <div>\n            <button style={{}}></button>\n          </div>\n          <div className=\"row\">\n            <Filter changeFilter = {this.changeFilter}/>\n            <List refresh = {this.state.refresh} filter = {this.state.filter} search = {this.state.searchtext}/>\n          </div>\n            \n        </div>\n        \n      </div>\n      // </FilterContext.Provider>\n    )\n    }\n}\n\n\nexport default View1;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}