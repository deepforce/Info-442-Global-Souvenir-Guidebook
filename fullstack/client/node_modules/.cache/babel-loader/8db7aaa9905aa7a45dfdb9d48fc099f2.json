{"ast":null,"code":"var _jsxFileName = \"/Users/Zack/Documents/INFO 442/Info-442-Global-Souvenir-Guidebook/fullstack/client/src/components/list/list.js\";\nimport React from 'react';\nimport Item from '../item/item.js'; // import ReactDOM from 'react-dom';\n// import * as serviceWorker from './serviceWorker';\n\nclass List extends React.Component {\n  // stores.data.map(item => <Item key = {item.StoreID} storename = {item.StoreName}/>)\n  constructor() {\n    super();\n    this.changePage = this.changePage.bind(this);\n    this.changeOrder = this.changeOrder.bind(this);\n    this.state = {\n      items: [],\n      isLoaded: false,\n      refresh: false,\n      pagination: [],\n      page_num: 0,\n      order: 0\n    };\n  }\n\n  changePage(operation) {\n    console.log(\"Changing\");\n    const op = this.state.pagination[operation];\n    this.setState({\n      page_num: op\n    });\n  }\n\n  changeOrder(order) {\n    alert(order);\n  }\n\n  componentDidMount() {\n    // console.log(this.context)\n    fetch(\"http://localhost:3001/stores?page=\" + this.state.page_num + \"&order_param=\" + this.state.order).then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json.data,\n        pagination: json.pagination\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const _this$props = this.props,\n          filter = _this$props.filter,\n          refresh = _this$props.refresh,\n          search = _this$props.search; // console.log(\"page_num: \"+page_num)\n    // console.log(\"p_page_num: \"+prevState.page_num)\n    // console.log(\"refresh: \"+refresh)\n    // console.log(\"p_refresh: \"+prevProps.refresh)\n\n    if (prevProps.refresh !== refresh || prevState.page_num !== this.state.page_num) {\n      var basic_query = \"http://localhost:3001/stores?page=\" + this.state.page_num + \"&order_param=\" + this.state.order;\n\n      for (var i in Object.keys(filter)) {\n        if (filter[Object.keys(filter)[i]] !== '') basic_query += \"&\" + Object.keys(filter)[i] + \"=\" + filter[Object.keys(filter)[i]];\n      }\n\n      if (search !== '') basic_query += \"&search_text=\" + search;\n      console.log(basic_query);\n      fetch(basic_query).then(res => res.json()).then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json.data,\n          pagination: json.pagination\n        });\n      });\n    }\n  }\n\n  render() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items,\n        pagination = _this$state.pagination;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Loading...\");\n    } else if (items.length === 0) return React.createElement(\"div\", {\n      className: \"col-lg-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"No Results! Try something else!\")));else if (typeof pagination.next != 'undefined' && typeof pagination.previous != 'undefined') {\n      return React.createElement(\"div\", {\n        className: \"col-lg-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"btn-group btn-group-toggle\",\n        style: {\n          backgroundColor: \"#eee\",\n          float: \"right\"\n        },\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"btn btn-secondary active\",\n        onClick: this.changeOrder(0),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"options\",\n        id: \"option1\",\n        autoComplete: \"off\",\n        checked: this.props.checked,\n        onChange: () => {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), \" Default\"), React.createElement(\"label\", {\n        className: \"btn btn-secondary\",\n        onClick: this.changeOrder(1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"options\",\n        id: \"option2\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), \" Price: Low to high\"), React.createElement(\"label\", {\n        className: \"btn btn-secondary\",\n        onClick: this.changeOrder(-1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"options\",\n        id: \"option3\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), \" Price: High to low\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, items.map(item => React.createElement(Item, {\n        key: item.StoreID,\n        id: item.StoreID,\n        address: item.Address,\n        phone: item.PhoneNum,\n        storename: item.StoreName,\n        website: item.Website,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"pager\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: () => this.changePage(\"previous\"),\n        className: \"previous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Previous\")), React.createElement(\"li\", {\n        onClick: () => this.changePage(\"next\"),\n        className: \"next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Next\"))));\n    } else if (typeof pagination.next != 'undefined') {\n      return React.createElement(\"div\", {\n        className: \"col-lg-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"btn-group btn-group-toggle\",\n        style: {\n          backgroundColor: \"#eee\",\n          float: \"right\"\n        },\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"btn btn-secondary active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"options\",\n        id: \"option1\",\n        autoComplete: \"off\",\n        onClick: () => this.changeOrder(0),\n        checked: this.props.checked,\n        onChange: () => {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), \" Default\"), React.createElement(\"label\", {\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"options\",\n        id: \"option2\",\n        autoComplete: \"off\",\n        onClick: () => this.changeOrder(1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), \" Price: Low to high\"), React.createElement(\"label\", {\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"options\",\n        id: \"option3\",\n        autoComplete: \"off\",\n        onClick: () => this.changeOrder(-1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), \" Price: High to low\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, items.map(item => React.createElement(Item, {\n        key: item.StoreID,\n        id: item.StoreID,\n        address: item.Address,\n        phone: item.PhoneNum,\n        storename: item.StoreName,\n        website: item.Website,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"pager\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: () => this.changePage(\"next\"),\n        className: \"next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Next\"))));\n    } else if (typeof pagination.previous != 'undefined') {\n      return React.createElement(\"div\", {\n        className: \"col-lg-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"btn-group btn-group-toggle\",\n        style: {\n          backgroundColor: \"#eee\",\n          float: \"right\"\n        },\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"btn btn-secondary active\",\n        onClick: this.changeOrder(0),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"options\",\n        id: \"option1\",\n        autoComplete: \"off\",\n        checked: this.props.checked,\n        onChange: () => {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), \" Default\"), React.createElement(\"label\", {\n        className: \"btn btn-secondary\",\n        onClick: this.changeOrder(1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"options\",\n        id: \"option2\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), \" Price: Low to high\"), React.createElement(\"label\", {\n        className: \"btn btn-secondary\",\n        onClick: this.changeOrder(-1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"options\",\n        id: \"option3\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), \" Price: High to low\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, items.map(item => React.createElement(Item, {\n        key: item.StoreID,\n        id: item.StoreID,\n        address: item.Address,\n        phone: item.PhoneNum,\n        storename: item.StoreName,\n        website: item.Website,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"pager\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: () => this.changePage(\"previous\"),\n        className: \"previous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Previous\"))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"col-lg-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"btn-group btn-group-toggle\",\n        style: {\n          backgroundColor: \"#eee\",\n          float: \"right\"\n        },\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"btn btn-secondary active\",\n        onClick: this.changeOrder(0),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"options\",\n        id: \"option1\",\n        autoComplete: \"off\",\n        checked: this.props.checked,\n        onChange: () => {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), \" Default\"), React.createElement(\"label\", {\n        className: \"btn btn-secondary\",\n        onClick: this.changeOrder(1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"options\",\n        id: \"option2\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), \" Price: Low to high\"), React.createElement(\"label\", {\n        className: \"btn btn-secondary\",\n        onClick: this.changeOrder(-1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"options\",\n        id: \"option3\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), \" Price: High to low\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, items.map(item => React.createElement(Item, {\n        key: item.StoreID,\n        id: item.StoreID,\n        address: item.Address,\n        phone: item.PhoneNum,\n        storename: item.StoreName,\n        website: item.Website,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default List; // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["/Users/Zack/Documents/INFO 442/Info-442-Global-Souvenir-Guidebook/fullstack/client/src/components/list/list.js"],"names":["React","Item","List","Component","constructor","changePage","bind","changeOrder","state","items","isLoaded","refresh","pagination","page_num","order","operation","console","log","op","setState","alert","componentDidMount","fetch","then","res","json","data","componentDidUpdate","prevProps","prevState","props","filter","search","basic_query","i","Object","keys","render","length","next","previous","backgroundColor","float","checked","map","item","StoreID","Address","PhoneNum","StoreName","Website"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Item from '../item/item.js'\n// import ReactDOM from 'react-dom';\n// import * as serviceWorker from './serviceWorker';\n\nclass List extends React.Component {\n    // stores.data.map(item => <Item key = {item.StoreID} storename = {item.StoreName}/>)\n    constructor () {\n        super()\n        this.changePage = this.changePage.bind(this)\n        this.changeOrder = this.changeOrder.bind(this)\n        this.state = {\n            items: [],\n            isLoaded: false,\n            refresh: false,\n            pagination: [],\n            page_num: 0,\n            order: 0,\n        }\n    }\n    changePage (operation) {\n        console.log(\"Changing\")\n        const op = this.state.pagination[operation]\n        this.setState({page_num: op})\n    }\n    changeOrder (order) {\n        alert(order)\n    }\n    componentDidMount() {\n        // console.log(this.context)\n        fetch(\"http://localhost:3001/stores?page=\"+this.state.page_num + \"&order_param=\"+this.state.order)\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n                isLoaded: true,\n                items: json.data,\n                pagination: json.pagination\n            })\n        })\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { filter, refresh, search} = this.props;\n        // console.log(\"page_num: \"+page_num)\n        // console.log(\"p_page_num: \"+prevState.page_num)\n        // console.log(\"refresh: \"+refresh)\n        // console.log(\"p_refresh: \"+prevProps.refresh)\n    \n        if (prevProps.refresh !== refresh || prevState.page_num!== this.state.page_num) {\n            var basic_query = \"http://localhost:3001/stores?page=\"+this.state.page_num+\"&order_param=\"+this.state.order\n            for (var i in Object.keys(filter)) {\n                if (filter[Object.keys(filter)[i]]!=='')\n                    basic_query+=\"&\"+Object.keys(filter)[i]+\"=\"+filter[Object.keys(filter)[i]]\n            }\n        \n            \n            if (search!=='')\n                basic_query+=\"&search_text=\"+search\n\n            console.log(basic_query)\n                fetch(basic_query)\n                .then(res => res.json())\n                .then(json => {\n                    this.setState({\n                        isLoaded: true,\n                        items: json.data,\n                        pagination: json.pagination\n                    })\n            })   \n        } \n            \n        \n      }\n\n    render() {\n            var { isLoaded, items, pagination } = this.state\n            \n            \n            if (!isLoaded) {\n                return <div>Loading...</div>\n            }\n            else if (items.length === 0)\n                return (\n                <div className=\"col-lg-8\">\n                <div className=\"container-fluid\">\n                    <p>No Results! Try something else!</p>\n                </div>\n                </div>\n                )\n            else if (typeof pagination.next != 'undefined' && typeof pagination.previous != 'undefined'){\n                return (\n                    <div className=\"col-lg-8\">\n                        <div className=\"btn-group btn-group-toggle\" style={{backgroundColor: \"#eee\", float: \"right\"}} data-toggle=\"buttons\">\n                            <label className=\"btn btn-secondary active\" onClick={this.changeOrder(0)}>\n                            <input type=\"radio\" name=\"options\" id=\"option1\" autoComplete=\"off\" checked={this.props.checked} onChange={()=>{}}/> Default\n                            </label>\n                            <label className=\"btn btn-secondary\" onClick={this.changeOrder(1)}>\n                            <input type=\"radio\" name=\"options\" id=\"option2\" autoComplete=\"off\" /> Price: Low to high\n                            </label>\n                            <label className=\"btn btn-secondary\" onClick={this.changeOrder(-1)}>\n                            <input type=\"radio\" name=\"options\" id=\"option3\" autoComplete=\"off\" /> Price: High to low\n                            </label>\n                        </div>\n                        <br/>\n                        <br/>\n                        <div className=\"container-fluid\">\n                        \n                            {items.map(item => \n                            <Item key = {item.StoreID}\n                                  id = {item.StoreID}\n                                  address = {item.Address}\n                                  phone = {item.PhoneNum}\n                                  storename = {item.StoreName} \n                                  website = {item.Website}\n                                  />)}\n                        </div>\n                        <br />\n                        \n                        <ul className=\"pager\">\n                                <li onClick = {()=>this.changePage(\"previous\")} className=\"previous\"><a href=\"#\">Previous</a></li>\n                                <li onClick = {()=>this.changePage(\"next\")} className=\"next\"><a href=\"#\">Next</a></li>\n                        </ul>\n                    </div>\n                )\n            }\n            else if (typeof pagination.next != 'undefined') {\n                return (\n                    <div className=\"col-lg-8\">\n                        <div className=\"btn-group btn-group-toggle\" style={{backgroundColor: \"#eee\", float: \"right\"}} data-toggle=\"buttons\">\n                            <label className=\"btn btn-secondary active\">\n                            <input type=\"radio\" name=\"options\" id=\"option1\" autoComplete=\"off\" onClick={()=>this.changeOrder(0)} checked={this.props.checked} onChange={()=>{}}/> Default\n                            </label>\n                            <label className=\"btn btn-secondary\">\n                            <input type=\"radio\" name=\"options\" id=\"option2\"  autoComplete=\"off\" onClick={()=>this.changeOrder(1)}/> Price: Low to high\n                            </label>\n                            <label className=\"btn btn-secondary\" >\n                            <input type=\"radio\" name=\"options\" id=\"option3\"  autoComplete=\"off\" onClick={()=>this.changeOrder(-1)}/> Price: High to low\n                            </label>\n                        </div>\n                        <br/>\n                        <br/>\n                        <div className=\"container-fluid\">\n                        \n                            {items.map(item => \n                            <Item key = {item.StoreID}\n                                  id = {item.StoreID}\n                                  address = {item.Address}\n                                  phone = {item.PhoneNum}\n                                  storename = {item.StoreName} \n                                  website = {item.Website}\n                                  />)}\n                        </div>\n                        <br />\n                        \n                        <ul className=\"pager\">\n                        <li onClick = {()=>this.changePage(\"next\")} className=\"next\"><a href=\"#\">Next</a></li>\n                        </ul>\n                    </div>\n                )\n            }\n            else if (typeof pagination.previous != 'undefined') {\n                return (\n                    <div className=\"col-lg-8\">\n                        <div className=\"btn-group btn-group-toggle\" style={{backgroundColor: \"#eee\", float: \"right\"}} data-toggle=\"buttons\">\n                            <label className=\"btn btn-secondary active\" onClick={this.changeOrder(0)}>\n                            <input type=\"radio\" name=\"options\" id=\"option1\" autoComplete=\"off\" checked={this.props.checked} onChange={()=>{}}/> Default\n                            </label>\n                            <label className=\"btn btn-secondary\" onClick={this.changeOrder(1)}>\n                            <input type=\"radio\" name=\"options\" id=\"option2\" autoComplete=\"off\"/> Price: Low to high\n                            </label>\n                            <label className=\"btn btn-secondary\" onClick={this.changeOrder(-1)}>\n                            <input type=\"radio\" name=\"options\" id=\"option3\" autoComplete=\"off\"/> Price: High to low\n                            </label>\n                        </div>\n                        <br/>\n                        <br/>\n                        <div className=\"container-fluid\">\n                            {items.map(item => \n                            <Item key = {item.StoreID}\n                                  id = {item.StoreID}\n                                  address = {item.Address}\n                                  phone = {item.PhoneNum}\n                                  storename = {item.StoreName} \n                                  website = {item.Website}\n                                  />)}\n                        </div>\n                        <br />\n                        \n                        <ul className=\"pager\">\n                        <li onClick = {()=>this.changePage(\"previous\")} className=\"previous\"><a  href=\"#\">Previous</a></li>\n                        </ul>\n                    </div>\n                )\n            }\n            else {\n                return (\n                    <div className=\"col-lg-8\">\n                        <div className=\"btn-group btn-group-toggle\" style={{backgroundColor: \"#eee\", float: \"right\"}} data-toggle=\"buttons\">\n                            <label className=\"btn btn-secondary active\" onClick={this.changeOrder(0)}>\n                            <input type=\"radio\" name=\"options\" id=\"option1\" autoComplete=\"off\" checked={this.props.checked} onChange={()=>{}}/> Default\n                            </label>\n                            <label className=\"btn btn-secondary\" onClick={this.changeOrder(1)}>\n                            <input type=\"radio\" name=\"options\" id=\"option2\" autoComplete=\"off\"/> Price: Low to high\n                            </label>\n                            <label className=\"btn btn-secondary\" onClick={this.changeOrder(-1)}>\n                            <input type=\"radio\" name=\"options\" id=\"option3\" autoComplete=\"off\"/> Price: High to low\n                            </label>\n                        </div>\n                        <br/>\n                        <br/>\n                        <div className=\"container-fluid\">\n                        \n                            {items.map(item => \n                            <Item key = {item.StoreID}\n                                  id = {item.StoreID}\n                                  address = {item.Address}\n                                  phone = {item.PhoneNum}\n                                  storename = {item.StoreName} \n                                  website = {item.Website}\n                                  />)}\n                        </div>\n                        <br />\n                    </div>\n                )\n            }\n        \n    }\n}\n\n\nexport default List;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}