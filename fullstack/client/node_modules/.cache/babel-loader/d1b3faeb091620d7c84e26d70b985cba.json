{"ast":null,"code":"var _jsxFileName = \"/Users/Zack/Documents/INFO 442/Info-442-Global-Souvenir-Guidebook/fullstack/client/src/components/dropdown/dropdown.js\";\nimport React from 'react';\nimport Option from '../option/option.js';\nimport Data from './dropdownData.js'; // import ReactDOM from 'react-dom';\n// import * as serviceWorker from './serviceWorker';\n\nclass Dropdown extends React.Component {\n  // themeComponents = Data.themeTypeData.map(option => <Option key = {option.id} name = {option.name}/>)\n  // neighborhoodComponents = Data.neighborhoodTypeData.map(option => <Option key = {option.id} name = {option.name}/>)\n  // forwhomComponents = Data.forwhomTypeData.map(option => <Option key = {option.id} name = {option.name}/>)\n  showFilter() {}\n\n  showOptions() {\n    var optionComponents; // if (this.props.id === 1) \n    //     optionComponents = Data.productTypeData.map(option => <Option key = {option.id} name = {option.name}/>)\n    // else if (this.props.id === 2)\n    //     optionComponents = Data.themeTypeData.map(option => <Option key = {option.id} name = {option.name}/>)\n    // else if (this.props.id === 3)\n    //     optionComponents = Data.neighborhoodTypeData.map(option => <Option key = {option.id} name = {option.name}/>)\n    // else if(this.props.id === 4)\n    //     optionComponents = Data.forwhomTypeData.map(option => <Option key = {option.id} name = {option.name}/>)\n\n    console.log(this.props);\n    return optionComponents;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary dropdown-toggle\",\n      type: \"button\",\n      \"data-toggle\": \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.name, React.createElement(\"span\", {\n      className: \"caret\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"dropdown-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"myInput\",\n      type: \"text\",\n      placeholder: \"Search..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), this.showOptions()));\n  }\n\n}\n\nexport default Dropdown; // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["/Users/Zack/Documents/INFO 442/Info-442-Global-Souvenir-Guidebook/fullstack/client/src/components/dropdown/dropdown.js"],"names":["React","Option","Data","Dropdown","Component","showFilter","showOptions","optionComponents","console","log","props","render","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CACA;AACA;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAEnC;AACA;AACA;AACAC,EAAAA,UAAU,GAAI,CAEb;;AACDC,EAAAA,WAAW,GAAI;AACX,QAAIC,gBAAJ,CADW,CAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WAAOH,gBAAP;AAEH;;AACDI,EAAAA,MAAM,GAAG;AACT,WACI;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAE,iCAAnB;AAAsD,MAAA,IAAI,EAAC,QAA3D;AAAoE,qBAAY,UAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4F,KAAKD,KAAL,CAAWE,IAAvG,EACI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAI,MAAA,SAAS,EAAE,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAE,cAAlB;AAAkC,MAAA,EAAE,EAAC,SAArC;AAA+C,MAAA,IAAI,EAAC,MAApD;AAA2D,MAAA,WAAW,EAAC,UAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKN,WAAL,EAFL,CAJJ,CADJ;AAYC;;AAnCkC;;AAuCvC,eAAeH,QAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport Option from '../option/option.js'\nimport Data from './dropdownData.js'\n// import ReactDOM from 'react-dom';\n// import * as serviceWorker from './serviceWorker';\n\nclass Dropdown extends React.Component {\n    \n    // themeComponents = Data.themeTypeData.map(option => <Option key = {option.id} name = {option.name}/>)\n    // neighborhoodComponents = Data.neighborhoodTypeData.map(option => <Option key = {option.id} name = {option.name}/>)\n    // forwhomComponents = Data.forwhomTypeData.map(option => <Option key = {option.id} name = {option.name}/>)\n    showFilter () {\n\n    }\n    showOptions () {\n        var optionComponents\n        // if (this.props.id === 1) \n        //     optionComponents = Data.productTypeData.map(option => <Option key = {option.id} name = {option.name}/>)\n        // else if (this.props.id === 2)\n        //     optionComponents = Data.themeTypeData.map(option => <Option key = {option.id} name = {option.name}/>)\n        // else if (this.props.id === 3)\n        //     optionComponents = Data.neighborhoodTypeData.map(option => <Option key = {option.id} name = {option.name}/>)\n        // else if(this.props.id === 4)\n        //     optionComponents = Data.forwhomTypeData.map(option => <Option key = {option.id} name = {option.name}/>)\n        console.log(this.props)\n        return optionComponents\n        \n    }\n    render() {\n    return (  \n        <div className={\"dropdown\"}>\n            <button className={\"btn btn-primary dropdown-toggle\"} type=\"button\" data-toggle=\"dropdown\">{this.props.name}\n                <span className=\"caret\"></span>\n            </button>\n            <ul className={\"dropdown-menu\"}>\n                <input className={\"form-control\"} id=\"myInput\" type=\"text\" placeholder=\"Search..\" />\n                {this.showOptions()}\n            </ul>\n        </div>\n        \n    )\n    }\n}\n\n\nexport default Dropdown;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}